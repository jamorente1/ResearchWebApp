// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResearchWebApp.Data;

#nullable disable

namespace ResearchWebApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250104174413_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ResearchWebApp.Models.ExamSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EndTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExamDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("StartTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("ExamSchedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndTime = "11:00",
                            ExamDate = new DateTime(2024, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Priority = 0,
                            StartTime = "09:00",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            EndTime = "15:00",
                            ExamDate = new DateTime(2024, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Priority = 1,
                            StartTime = "13:00",
                            SubjectId = 2
                        });
                });

            modelBuilder.Entity("ResearchWebApp.Models.RelatedLiterature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Preview")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectFileId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectFileId");

                    b.ToTable("RelatedLiterature");
                });

            modelBuilder.Entity("ResearchWebApp.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("EndTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Day = 1,
                            EndTime = "10:00",
                            StartTime = "09:00",
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            Day = 2,
                            EndTime = "12:00",
                            StartTime = "11:00",
                            SubjectId = 2
                        });
                });

            modelBuilder.Entity("ResearchWebApp.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SubjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Teacher")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SubjectDescription = "Basic Math",
                            SubjectName = "Mathematics",
                            Teacher = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            SubjectDescription = "Basic Science",
                            SubjectName = "Science",
                            Teacher = "Jane Smith"
                        });
                });

            modelBuilder.Entity("ResearchWebApp.Models.SubjectFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateUploaded")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectFiles");
                });

            modelBuilder.Entity("StudySession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExamScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SessionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExamScheduleId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudySessions");
                });

            modelBuilder.Entity("ResearchWebApp.Models.ExamSchedule", b =>
                {
                    b.HasOne("ResearchWebApp.Models.Subject", "Subject")
                        .WithMany("ExamSchedules")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("ResearchWebApp.Models.RelatedLiterature", b =>
                {
                    b.HasOne("ResearchWebApp.Models.SubjectFile", "SubjectFile")
                        .WithMany("RelatedLiteratures")
                        .HasForeignKey("SubjectFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubjectFile");
                });

            modelBuilder.Entity("ResearchWebApp.Models.Schedule", b =>
                {
                    b.HasOne("ResearchWebApp.Models.Subject", "Subject")
                        .WithMany("Schedules")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("ResearchWebApp.Models.SubjectFile", b =>
                {
                    b.HasOne("ResearchWebApp.Models.Subject", "Subject")
                        .WithMany("SubjectFiles")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudySession", b =>
                {
                    b.HasOne("ResearchWebApp.Models.ExamSchedule", "ExamSchedule")
                        .WithMany("StudySessions")
                        .HasForeignKey("ExamScheduleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ResearchWebApp.Models.Subject", "Subject")
                        .WithMany("StudySessions")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamSchedule");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("ResearchWebApp.Models.ExamSchedule", b =>
                {
                    b.Navigation("StudySessions");
                });

            modelBuilder.Entity("ResearchWebApp.Models.Subject", b =>
                {
                    b.Navigation("ExamSchedules");

                    b.Navigation("Schedules");

                    b.Navigation("StudySessions");

                    b.Navigation("SubjectFiles");
                });

            modelBuilder.Entity("ResearchWebApp.Models.SubjectFile", b =>
                {
                    b.Navigation("RelatedLiteratures");
                });
#pragma warning restore 612, 618
        }
    }
}
